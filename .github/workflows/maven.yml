# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - run: mvn -B test --file pom.xml
    - run: mkdir staging && cp target/*.war staging
    - uses: actions/upload-artifact@v1
      with:
        name: Package
        path: staging
    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@v0.0.1
      with:
      # SonarQube server URL
      host: http://18.224.24.91:9000/
      # Set the sonar.projectBaseDir analysis property
      projectBaseDir: # optional, default is .
      # Login or authentication token of a SonarQube user
      login: c595b1ae1144a3ccd3b5fb493c0e98df3f03896c
      # Password that goes with the sonar.login username. This should be left blank if an authentication token is being used.
      password: # optional
    - uses: HurricanKai/Publish-Docker-Github-Action@master
      with:
       name: madhu216/ecommerce
       username: madhu216
       password: madhu216@216
       dockerfile: Dockerfile
    - name: tomcat deploy
      run: curl -v -u tomcat:tomcat -T /home/runner/work/ecommerce/ecommerce/target/ecommerce.war 'http://ec2-18-224-38-134.us-east-2.compute.amazonaws.com:8080///manager/text/deploy?path=/ecommerce.war'   


      
    
